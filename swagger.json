{
  "swagger": "2.0",
  "info": {
    "description": "Wayfarer is a public transpotation booking server",
    "version": "1.0.0",
    "title": "WayFarer API",
    "contact": {
      "email": "sogungbure@gmail.com"
    }
  },
  "host": "wayfarer1000.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Buses",
      "description": "API for buses related actions"
    },
    {
      "name": "Trips",
      "description": "API for trip related actions"
    },
    {
      "name": "Bookings",
      "description": "API for booking related actions"
    },
    {
      "name": "Users",
      "description": "API for authenticating users"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/trips": {
      "post": {
        "tags": [
          "Trips"
        ],
        "summary": "Create a new trip",
        "description": "Only admins can create a new trip",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Trip object that is to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTrip"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Trip created successfully"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Not authorized to create trip"
          },
          "422": {
            "description": "Missing or invalid fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Trips"
        ],
        "summary": "Retrieve all trips on the system",
        "description": "Allows users and admins to view all trips on the system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/trips/{tripId}": {
      "patch": {
        "tags": [
          "Trips"
        ],
        "summary": "Cancel a trip",
        "description": "Allows admins to cancel a trip",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "description": "ID of trip to be cancelled",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip cancelled successfully"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Not authorized to create trip"
          },
          "404": {
            "description": "Trip to be cancelled does not exist"
          },
          "422": {
            "description": "Missing or invalid fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/buses": {
      "post": {
        "tags": [
          "Buses"
        ],
        "summary": "Create a new bus",
        "description": "Only admins can create a new bus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Bus object that is to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBus"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Bus created successfully"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Not authorized to add bus"
          },
          "422": {
            "description": "Missing or invalid fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Buses"
        ],
        "summary": "Retrieve all buses on the system",
        "description": "Allows admins to view all buses on the system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Unauthorized action"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/bookings": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "summary": "Book a seat for a trip",
        "description": "Allow users book a seat for an existing trip",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Trip and seat number",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Booking successfull"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "404": {
            "description": "Trip to book for not found"
          },
          "422": {
            "description": "Missing or invalid fields or seat number not available"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "Retrieve bookings on the system",
        "description": "Allows users to view all their bookings and admins to view all bookings on the system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Bookings retrieved successfully"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/bookings/{bookingId}": {
      "delete": {
        "tags": [
          "Bookings"
        ],
        "summary": "Delete a booking",
        "description": "Allows users to delete their bookings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "description": "ID of booking to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Booking deleted successfully"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "404": {
            "description": "Booking to be deleted does not exist"
          },
          "422": {
            "description": "Missing or invalid fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register new user",
        "description": "Users can signup on the application.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to be created object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "422": {
            "description": "Missing or invalid fields or email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/sigin": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Signin a user",
        "description": "Registered users can signin into the application.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User login details object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Signin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User login successfully"
          },
          "422": {
            "description": "Missing or invalid fields or invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "Booking": {
      "type": "object",
      "required": [
        "trip_id",
        "seat_number"
      ],
      "properties": {
        "trip_id": {
          "type": "integer",
          "example": "1"
        },
        "seat_number": {
          "type": "integer",
          "example": "2"
        }
      }
    },
    "CreateBus": {
      "type": "object",
      "required": [
        "number_plate",
        "manufacturer",
        "model",
        "year",
        "capacity"
      ],
      "properties": {
        "number_plate": {
          "type": "string",
          "example": "AGE456YT"
        },
        "manufacturer": {
          "type": "string",
          "example": "Toyota"
        },
        "model": {
          "type": "string",
          "example": "Camry"
        },
        "year": {
          "type": "integer",
          "example": "2019"
        },
        "capacity": {
          "type": "integer",
          "example": "7"
        }
      }
    },
    "CreateTrip": {
      "type": "object",
      "required": [
        "bus_id",
        "origin",
        "destination",
        "trip_date",
        "fare"
      ],
      "properties": {
        "bus_id": {
          "type": "integer",
          "example": "1"
        },
        "origin": {
          "type": "string",
          "example": "Lagos"
        },
        "destination": {
          "type": "string",
          "example": "Abuja"
        },
        "trip_date": {
          "type": "string",
          "example": "2019-06-15"
        },
        "fare": {
          "type": "number",
          "example": "7000.00"
        }
      }
    },
    "Signup": {
      "type": "object",
      "required": [
        "first_name",
        "last_name",
        "email",
        "password"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Jeffery"
        },
        "last_name": {
          "type": "string",
          "example": "Way"
        },
        "email": {
          "type": "string",
          "example": "sogungbure@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "1234567890"
        }
      }
    },
    "Signin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "sogungbure@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "1234567890"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Github",
    "url": "https://github.com/Steelze/wayfarer/tree/develop"
  }
}